
LOG = $(LOCAL_DIR)/log
EXECUTE = $(LOCAL_DIR)/execute
ALLOW_ADMINISTRATOR = $(HOSTNAME), $(GLIDEIN_HOST)

MAIL = /bin/mail
DAEMON_LIST = MASTER, STARTD
MASTER_ADDRESS_FILE = $(LOG)/.master_address
MASTER = $(SBIN)/condor_master
MASTER_LOG = $(LOG)/MasterLog
STARTD = $(SBIN)/condor_startd
STARTER = $(SBIN)/condor_starter
PROCD = $(SBIN)/condor_procd
PROCD_LOG = $(LOG)/ProcLog
PROCD_ADDRESS = $(LOCK)/procd_address

STARTER_STD = $(SBIN)/condor_starter.std
STARTER_LIST = STARTER, STARTER_STD

USE_NFS = False
USE_CKPT_SERVER = False

COLLECTOR_HOST = graphics2:9628
USE_SHARED_PORT = False

LOCK = $(LOG)
STARTD_LOG = $(LOG)/StartLog
STARTER_LOG = $(LOG)/StarterLog

STARTD_DEBUG = D_COMMAND

SUSPEND = False
CONTINUE = True
PREEMPT = False
WANT_VACATE = False
WANT_SUSPEND = True
SUSPEND_VANILLA = False
WANT_SUSPEND_VANILLA = True
KILL = False
IS_GLIDEIN = True
NODE_SET = "$NODE_SET"
STARTD_EXPRS = IS_GLIDEIN, START, DaemonStopTime, NODE_SET
STARTD_ATTRS = IS_GLIDEIN, START, DaemonStopTime, NODE_SET

MASTER_WAITS_FOR_GCB_BROKER = False

START = True

NUM_SLOTS = 1
NUM_SLOTS_TYPE_1 = 1
SLOT_TYPE_1 = cpus=100%,disk=20%
SLOT_TYPE_1_PARTITIONABLE = true
CLAIM_WORKLIFE = 0

TOTALDISK = 20000000000 
#WithinResourceLimits = true
#HasFileTransferPluginMethods = true
FILETRANSFER_PLUGINS = /mnt/home/faculty/csurhud/soft/condor/libexec/curl_plugin, /mnt/home/faculty/csurhud/soft/condor/libexec/data_plugin, /mnt/home/faculty/csurhud/soft/condor/libexec/box_plugin.py, /mnt/home/faculty/csurhud/soft/condor/libexec/gdrive_plugin.py, /mnt/home/faculty/csurhud/soft/condor/libexec/onedrive_plugin.py


# your own username
USER = csurhud

# map the generated SSL certificates to our user account
CERTIFICATE_MAPFILE = /mnt/home/faculty/$(USER)/certs/condor_mapfile

# tell Condor where the self-signed certificate is
AUTH_SSL_SERVER_CAFILE = /mnt/home/faculty/$(USER)/certs/pegasus.crt
AUTH_SSL_SERVER_CERTFILE = /mnt/home/faculty/$(USER)/certs/pegasus.crt
AUTH_SSL_SERVER_KEYFILE = /mnt/home/faculty/$(USER)/certs/pegasus.key
AUTH_SSL_CLIENT_CAFILE =   /mnt/home/faculty/$(USER)/certs/pegasus.crt
AUTH_SSL_CLIENT_CERTFILE = /mnt/home/faculty/$(USER)/certs/pegasus.crt
AUTH_SSL_CLIENT_KEYFILE =  /mnt/home/faculty/$(USER)/certs/pegasus.key

# everything must be secured by SSL
SEC_DEFAULT_AUTHENTICATION = REQUIRED
SEC_DEFAULT_AUTHENTICATION_METHODS = SSL
SEC_DAEMON_AUTHENTICATION = REQUIRED
SEC_DAEMON_AUTHENTICATION_METHODS = SSL
SEC_DAEMON_INTEGRITY = REQUIRE
SEC_DAEMON_ENCRYPTION = REQUIRED

# allow your own user to do everything
ALLOW_READ = $(USER)@*
ALLOW_WRITE = $(USER)@*
ALLOW_ADMINISTRATOR = $(USER)@*
ALLOW_CONFIG = $(USER)@*
ALLOW_NEGOTIATOR = $(USER)@*
ALLOW_DAEMON = $(USER)@*

# don't be too strict on SSL checks, this is a self-signed certificate
SSL_SKIP_HOST_CHECK = true
